{"version":3,"sources":["components/Find.js","App.js","index.js"],"names":["SearchBox","countryName","setCountryName","Segment","Input","icon","name","circular","link","placeholder","value","onChange","event","target","ShowMatchDetails","country","console","log","useState","temp","setTemp","setIcon","wind","setWind","Grid","columns","stackable","textAlign","Divider","vertical","Row","verticalAlign","Column","capital","population","languages","map","lang","src","flag","alt","demonym","height","width","useEffect","axios","get","then","response","weatherData","data","main","weather","speed","toString","deg","catch","err","ShowMatches","key","List","divided","Item","Button","basic","color","content","onClick","CountryDetails","countries","matches","filter","toLowerCase","includes","length","Find","App","setCountries","Container","Header","style","as","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4afddfa9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n    Input,\n    Segment,\n    Button,\n    Grid,\n    Divider,\n    Header,\n    List,\n\n} from 'semantic-ui-react'\n\n\n// used to search for a specific country\n// it takes a counry keyword and is set a a state\nconst SearchBox = ({ countryName, setCountryName }) => {\n    const searchCountry = (event) => {\n        setCountryName(event.target.value);\n    };\n\n    return (\n        <Segment>\n            <div>\n                    <Input\n                        icon={{ name: 'search', circular: true, link: true }}\n                        placeholder='Search...'\n                        value={countryName}\n                        onChange={searchCountry}\n                    />\n            </div>\n        </Segment>\n    );\n};\n\n// this is used to render the search result for the matched countries from the weather API\n//\nconst ShowMatchDetails = ({ country }) => {\n    console.log(country);\n\n    const [temp, setTemp] = useState(0);\n    const [icon, setIcon] = useState('');\n    const [wind, setWind] = useState('');\n\n    const dispMatchLang = () => country.languages.map(lang =>\n        <li>{lang.name}</li>);\n\n    // gets the weather information fo a particularmatch\n    // makes a request to the openweather API for a particular city weather Information\n    const WeatherInfo = () => {\n        useEffect(() => {\n            axios\n                .get(`http://api.openweathermap.org/data/2.5/weather?q=${country.capital}&APPID=57931c248a6c40409a3da993a10b5c0c`)\n                .then((response) => {\n                    const weatherData = response.data;\n                    setTemp(weatherData.main.temp);\n                    setIcon(`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}.png`);\n                    setWind(`${weatherData.wind.speed.toString()}  m/s  ${weatherData.wind.deg.toString()}  degrees`);\n                })\n                .catch((err) => {\n                    console.log('ERROR', err.response);\n                });\n        }, [])\n        \n\n        // return (\n        //     <Segment>\n        //         <div>\n        //             <h2>Weather in {country.capital}</h2>\n        //             <strong>temperature: </strong>{temp} Kelvin<br />\n        //             <img\n        //                 src={icon}\n        //                 alt={`weather icon for ${country.capital}`}\n        //                 height=\"100px\"\n        //                 width=\"120px\" /><br />\n        //             <strong>Wind: </strong>{wind}\n        //         </div>\n        //     </Segment>\n        // );\n    };\n\n    return (\n        <Segment>\n            <Grid columns={2} stackable textAlign='center'>\n            <Divider vertical></Divider>\n            <Grid.Row verticalAlign=\"middle\">\n                <Grid.Column>\n                    <div>\n                        <h1>{country.name}</h1>\n                        <p>capital {country.capital}</p>\n                        <p>population: <b>{country.population}</b></p><br />\n\n                        <h3>languages</h3>\n                        <p>{dispMatchLang()}</p>\n                        <img\n                            src={country.flag}\n                            alt={`${country.demonym}, Match Flag!!!`}\n                            height=\"120px\"\n                            width=\"150px\" />\n                        {WeatherInfo()}\n                    </div>\n\n                </Grid.Column>\n                <Grid.Column>\n                    <Segment>\n                        <div>\n                            <h2>Weather in {country.capital}</h2>\n                            <strong>temperature: </strong>{temp} Kelvin<br />\n                            <img\n                                src={icon}\n                                alt={`weather icon for ${country.capital}`}\n                                height=\"100px\"\n                                width=\"120px\" /><br />\n                            <strong>Wind: </strong>{wind}\n                            </div>\n                    </Segment>\n                </Grid.Column>\n\n            </Grid.Row>\n            </Grid>\n        </Segment>\n    );\n};\n\n// Renders the matches for a particular query\n// makes use of a show button to display the weather informaton of particular city.\n\nconst ShowMatches = ({ country, setCountryName }) => (\n        <div key={country.name}>\n            {/* the onclick handler sets the value of the input field to the\n            renderd country using the state of the query */}\n            <List divided verticalAlign=\"middle\">\n                <List.Item>\n                    {country.name}\n                    <Button\n                        basic\n                        color='green'\n                        content='Show'\n                        onClick={() => setCountryName(country.name)}\n                    />\n\n                </List.Item>\n            </List>\n        </div>\n\n    );\n\n    // returns a match fom the restcountries API\n    // renders the mathes based on the number of matched countries found\n//\nconst CountryDetails = ({ countries = [], countryName, setCountryName }) => {\n    if (countryName === '') {\n        setCountryName('Nigeria');\n    }\n\n    const matches = countries.filter(country =>\n        country.name.toLowerCase().includes(countryName.toLowerCase()));\n\n\n    if (matches.length === 1) {\n        return <ShowMatchDetails country={matches[0]} />;\n    } else if (matches.length <= 10) {\n        return matches.map(country => (\n            <ShowMatches key={country.name} country={country} setCountryName={setCountryName} />\n        ));\n    } return <div>Too Many Matches, specify another filter</div>;\n};\n\n// A component that enables users search for a specific country\n// using a search keyword and a displayinglist of macthed result.\nconst Find = ({ countries, countryName, setCountryName }) => (\n    <div>\n        <SearchBox setCountryName={setCountryName} />\n        <CountryDetails\n            countries={countries}\n            countryName={countryName}\n            setCountryName={setCountryName} />\n    </div>\n\n    );\n\n\nexport default Find;\n\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Find from './components/Find';\nimport {\n    Container,\n    Header,\n    \n} from 'semantic-ui-react'\n\nfunction App() {\n    const [countries, setCountries] = useState([]);\n    const [countryName, setCountryName] = useState('');\n\n    // make a HTTP request to the restcountries API and use the\n    // javascrit promse to set the API responce to the variale name countries\n    const hook = (() => {\n        axios\n            .get('https://restcountries.eu/rest/v2/all')\n            .then((response) => {\n                console.log(response.data);\n                setCountries(response.data);\n            });\n    });\n    useEffect(hook, []);\n\n\n    return (\n        <Container>\n            <Header style={{textAlign: 'center'}} as=\"h1\">Country Stack</Header>\n            <Find\n                countries={countries}\n                countryName={countryName}\n                setCountryName={setCountryName} />\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}