{"version":3,"sources":["components/Find.js","App.js","index.js"],"names":["SearchBox","countryName","setCountryName","type","value","onChange","event","target","ShowMatchDetails","country","console","log","useState","temp","setTemp","icon","setIcon","wind","setWind","name","capital","population","languages","map","lang","src","flag","alt","demonym","height","width","useEffect","axios","get","then","response","weatherData","data","main","weather","speed","toString","deg","catch","err","ShowMatches","key","onClick","CountryDetails","countries","matches","filter","toLowerCase","includes","length","Find","App","setCountries","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7efe4068.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\n// used to search for a specific country\n// it takes a counry keyword and is set a a state\nconst SearchBox = ({ countryName, setCountryName }) => {\n    const searchCountry = (event) => {\n        setCountryName(event.target.value);\n    };\n\n    return (\n        <div>\n            find countries <input\n                type=\"text\"\n                value={countryName}\n                onChange={searchCountry} />\n        </div>\n    );\n};\n\n// this is used to render the search result for the matched countries from the weather API\n//\nconst ShowMatchDetails = ({ country }) => {\n    console.log(country);\n\n    const [temp, setTemp] = useState(0);\n    const [icon, setIcon] = useState('');\n    const [wind, setWind] = useState('');\n\n    const dispMatchLang = () => country.languages.map(lang =>\n        <li>{lang.name}</li>);\n\n    // gets the weather information fo a particularmatch\n    // makes a request to the openweather API for a particular city weather Information\n    const WeatherInfo = () => {\n        // const hook = (() => {\n        //     axios\n        //         .get(`http://api.openweathermap.org/data/2.5/weather?q=${country.capital}&APPID=57931c248a6c40409a3da993a10b5c0c`)\n        //         .then((response) => {\n        //             const weatherData = response.data;\n        //             setTemp(weatherData.main.temp);\n        //             setIcon(`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}.png`);\n        //             setWind(`${weatherData.wind.speed.toString()}  m/s  ${weatherData.wind.deg.toString()}  degrees`);\n        //         })\n        //         .catch((err) => {\n        //             console.log('ERROR', err.response);\n        //         });\n        // });\n        // useEffect(hook, []);\n\n        useEffect(() => {\n            axios\n                .get(`http://api.openweathermap.org/data/2.5/weather?q=${country.capital}&APPID=57931c248a6c40409a3da993a10b5c0c`)\n                .then((response) => {\n                    const weatherData = response.data;\n                    setTemp(weatherData.main.temp);\n                    setIcon(`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}.png`);\n                    setWind(`${weatherData.wind.speed.toString()}  m/s  ${weatherData.wind.deg.toString()}  degrees`);\n                })\n                .catch((err) => {\n                    console.log('ERROR', err.response);\n                });\n        }, [])\n        \n\n        return (\n            <div>\n                <h2>Weather in {country.capital}</h2>\n                <strong>temperature: </strong>{temp} Kelvin<br />\n                <img\n                    src={icon}\n                    alt={`weather icon for ${country.capital}`}\n                    height=\"100px\"\n                    width=\"120px\" /><br />\n                <strong>Wind: </strong>{wind}\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <h1>{country.name}</h1>\n            <p>capital {country.capital}</p>\n            <p>population {country.population}</p><br />\n\n            <h3>languages</h3>\n            <p>{dispMatchLang()}</p>\n            <img\n                src={country.flag}\n                alt={`${country.demonym}, Match Flag!!!`}\n                height=\"120px\"\n                width=\"150px\" />\n            {WeatherInfo()}\n        </div>\n    );\n};\n\n// Renders the matches for a particular query\n// makes use of a show button to display the weather informaton of particular city.\n\nconst ShowMatches = ({ country, setCountryName }) => (\n    <div key={country.name}>\n        {/* the onclick handler sets the value of the input field to the\n        renderd country using the state of the query */}\n        {country.name} <button onClick={() => setCountryName(country.name)}>show</button>\n    </div>\n    );\n\n    // returns a match fom the restcountries API\n    // renders the mathes based on the number of matched countries found\n//\nconst CountryDetails = ({ countries = [], countryName, setCountryName }) => {\n    if (countryName === '') {\n        setCountryName('Nigeria');\n    }\n\n    const matches = countries.filter(country =>\n        country.name.toLowerCase().includes(countryName.toLowerCase()));\n\n\n    if (matches.length === 1) {\n        return <ShowMatchDetails country={matches[0]} />;\n    } else if (matches.length <= 10) {\n        return matches.map(country => (\n            <ShowMatches key={country.name} country={country} setCountryName={setCountryName} />\n            ));\n    } return <div>Too Many Matches, specify another filter</div>;\n};\n\n// A component that enables users search for a specific country\n// using a search keyword and a displayinglist of macthed result.\nconst Find = ({ countries, countryName, setCountryName }) => (\n    <div>\n        <SearchBox setCountryName={setCountryName} />\n        <CountryDetails\n            countries={countries}\n            countryName={countryName}\n            setCountryName={setCountryName} />\n    </div>\n\n    );\n\n\nexport default Find;\n\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Find from './components/Find';\n\nfunction App() {\n    const [countries, setCountries] = useState([]);\n    const [countryName, setCountryName] = useState('');\n\n    // make a HTTP request to the restcountries API and use the\n    // javascrit promse to set the API responce to the variale name countries\n    const hook = (() => {\n        axios\n            .get('https://restcountries.eu/rest/v2/all')\n            .then((response) => {\n                console.log(response.data);\n                setCountries(response.data);\n            });\n    });\n    useEffect(hook, []);\n\n    // const defaultCountry = countries.find(country => country.name === 'Nigeria');\n\n\n    return (\n        <div>\n            <h2>Countries</h2>\n            <Find\n                countries={countries}\n                countryName={countryName}\n                setCountryName={setCountryName} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}